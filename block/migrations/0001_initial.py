# Generated by Django 3.2.7 on 2023-05-04 17:05

import block.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, max_length=100000, null=True, upload_to=block.models.block_to)),
                ('cover', models.ImageField(blank=True, max_length=100000, null=True, upload_to=block.models.block_for)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('desc', models.TextField(blank=True, max_length=100000, null=True)),
                ('about', models.TextField(blank=True, max_length=100000, null=True)),
                ('category', models.CharField(blank=True, max_length=1000, null=True)),
                ('block_type', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('day', models.CharField(blank=True, max_length=1000, null=True)),
                ('month', models.CharField(blank=True, max_length=1000, null=True)),
                ('year', models.CharField(blank=True, max_length=1000, null=True)),
                ('subscriber_count', models.IntegerField(blank=True, default=0, null=True)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=1000, unique=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=100000, null=True, upload_to=block.models.link_to)),
                ('title', models.CharField(max_length=300)),
                ('url', models.URLField(blank=True, max_length=2000)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('attachment', models.ImageField(blank=True, max_length=100000, null=True, upload_to=block.models.post_to)),
                ('video', models.FileField(blank=True, max_length=1000000, null=True, upload_to=block.models.post_to)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('link', models.URLField(blank=True, max_length=2000, null=True)),
                ('text', models.TextField(blank=True, max_length=100000, null=True)),
                ('post_type', models.CharField(blank=True, max_length=300, null=True)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('saved_count', models.IntegerField(blank=True, default=0, null=True)),
                ('report_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_repost', models.BooleanField(default=False)),
                ('is_reviewed', models.BooleanField(default=True)),
                ('votes', models.IntegerField(default=0)),
                ('reposts', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=1000)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('text', models.TextField(blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('is_post', models.BooleanField()),
                ('is_comment', models.BooleanField()),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='block.comment')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='block.post')),
            ],
        ),
    ]
